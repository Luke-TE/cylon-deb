#!/bin/bash
#module containing functions called from cylon package
#Function: ccryptFunc

#FUNCTION HEADER
# NAME : ccryptFunc
# DESCRIPTION : Function to use ccrypt encrypt and decrypt files
# PROCESS :[1]   Encrypt. a file [2] decrypt  
# [3]   view a encrypted file                 
# [4]   view a decrypted file [5]  keychange
#NOTES :   needs ccrypt  installed 
function ccryptFunc
{
	while true; do
	clear
	
	local myccfile=""
	local choiceCcVar=""
	
	msgFunc blue "ccrypt - encrypt and decrypt files:-"
	#check if ccrypt installed
	if ! checkPacFunc ccrypt
	then
		msgFunc anykey 
	return
	fi
	msgFunc green "Do you want to use the path(myccfile) defined in Config file  [y/n]"
	#if msgFunc yesno returns 0 yes pressed
	if msgFunc yesno 
	then
	#path from file
		readconfigFunc
		msgFunc anykey
		clear
	else
			#prompt for manual file path
			#read -r myccfile
			myccfile=$(dialog --title "Ccrypt" --output-fd 1 --begin 1 1 --cancel-label "Exit" --title  "Select Directory path:" --dselect / 10 40)
				case $? in
				0)
					clear
				;;
				1)
					clear
					msgFunc yellow "Exit pressed."
					return
				;;
				255)
					clear
					msgFunc yellow "Esc pressed."
					return
				;;
			esac
			cd "$myccfile" || exitHandlerFunc DEST4
			msgFunc blue "Contents of $myccfile "
			ls -la
			msgFunc blue "Type the file name  you want to work with:-"
			read -r myccfile
	fi
	#is the file there?
	if [ -f "$myccfile"  ] 
	 then 
		msgFunc norm "$myccfile Found file!" 
	 else
		msgFunc red "$myccfile File out found!"
		exitHandlerFunc fileerror 
	 fi
	 #display the menn
	 msgFunc blue "ccrypt - encrypt and decrypt files Menu options:-"
	local optionsccArr=("Encrypt a file " "Decrypt a file" "View encrypted file" \
"Edit decrypted file with NANO" "Change the key of encrypted file" "Return")
			select choiceCcVar in "${optionsccArr[@]}"
			do
			case "$choiceCcVar" in 
			"${optionsccArr[0]}") #Encrypt.
				msgFunc green "Decrypt  a files to standard output., ccrypt -e"
				ccrypt -e "$myccfile"
			;;
			"${optionsccArr[1]}") #Decrypt
				msgFunc green "Decrypt  a files to standard output., ccrypt -d"
				ccrypt -d "$myccfile"
			;;
			"${optionsccArr[2]}") #Decrypt  files to standard output.
				msgFunc green "Decrypt  file to standard output., ccrypt -c"
				ccrypt -c "$myccfile"
			;;
			"${optionsccArr[3]}") #Edit a Decrypted file
				msgFunc green "Edit a Decrypted file with nano text editor, nano"
				nano "$myccfile"
			;;
			"${optionsccArr[4]}") #Change the key of encrypted data
				msgFunc green "Change the key of encrypted file, ccrypt -x"
				ccrypt -x "$myccfile"
			;;
			*)  #exit  
					clear
					return
					;;
			esac
			break
			done
			msgFunc green "Done!"
			msgFunc anykey
done
}
